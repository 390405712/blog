(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{339:function(e,v,_){"use strict";_.r(v);var d=_(38),t=Object(d.a)({},function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),_("h2",{attrs:{id:"使用-jquery-和使用框架的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用-jquery-和使用框架的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用 jQuery 和使用框架的区别")]),e._v(" "),_("ul",[_("li",[e._v("数据和视图的分离，解耦（开放封闭原则）")]),e._v(" "),_("li",[e._v("以数据驱动视图，只关心数据变化，DOM 操作被封装")]),e._v(" "),_("li",[e._v("前端组件化")])]),e._v(" "),_("h2",{attrs:{id:"对-mvvm-的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对-mvvm-的理解","aria-hidden":"true"}},[e._v("#")]),e._v(" 对 MVVM 的理解")]),e._v(" "),_("ul",[_("li",[e._v("MVVM - Model View ViewModel")]),e._v(" "),_("li",[_("code",[e._v("View - ViewModel - Model")])]),e._v(" "),_("li",[_("code",[e._v("ViewModel 指向vue, 包含了 dom listeners（dom监听） 、data bindings（数据绑定）")])]),e._v(" "),_("li",[_("code",[e._v("View 通过 dom listeners 控制 Model")])]),e._v(" "),_("li",[_("code",[e._v("Model 通过 data bindings 控制 View")])])]),e._v(" "),_("h2",{attrs:{id:"三要素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三要素","aria-hidden":"true"}},[e._v("#")]),e._v(" 三要素")]),e._v(" "),_("ul",[_("li",[e._v("响应式：vue 如何监听到 data 的每个属性变化？")]),e._v(" "),_("li",[e._v("模板引擎：vue 的模板如何被解析，指令如何处理？")]),e._v(" "),_("li",[e._v("渲染：vue 的模板如何被渲染成 html ？以及渲染过程")])]),e._v(" "),_("h2",{attrs:{id:"vue-中如何实现响应式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-中如何实现响应式","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 中如何实现响应式")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Object.defineProperty")])]),e._v(" "),_("li",[e._v("将"),_("code",[e._v("data")]),e._v("的属性代理到"),_("code",[e._v("vm")]),e._v("上")])]),e._v(" "),_("h2",{attrs:{id:"vue-中如何解析模板"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-中如何解析模板","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 中如何解析模板")]),e._v(" "),_("ul",[_("li",[e._v("模板：字符串，有逻辑，嵌入 JS 变量……")]),e._v(" "),_("li",[e._v("模板必须转换为 JS 代码（有逻辑、渲染 html、JS 变量）")]),e._v(" "),_("li",[_("code",[e._v("render")]),e._v("函数渲染用")]),e._v(" "),_("li",[_("code",[e._v("render")]),e._v("函数执行返回"),_("code",[e._v("vnode")])]),e._v(" "),_("li",[e._v("拿到"),_("code",[e._v("vnode")]),e._v("调用"),_("code",[e._v("updateComponent")]),e._v("函数")])]),e._v(" "),_("h2",{attrs:{id:"vue-的整个实现流程（重点）-demo：todo-list"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的整个实现流程（重点）-demo：todo-list","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 的整个实现流程（重点） demo：todo-list")]),e._v(" "),_("h3",{attrs:{id:"_1-第一步：解析模板成-render-函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一步：解析模板成-render-函数","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. 第一步：解析模板成 render 函数")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("with")]),e._v(" 的用法")]),e._v(" "),_("li",[e._v("模板中的所有信息都被 "),_("code",[e._v("render")]),e._v(" 函数包含")]),e._v(" "),_("li",[e._v("模板中用到的 "),_("code",[e._v("data")]),e._v(" 中的属性，都变成了 JS 变量")]),e._v(" "),_("li",[e._v("模板中的 "),_("code",[e._v("v-model")]),e._v(" "),_("code",[e._v("v-for")]),e._v(" "),_("code",[e._v("v-on")]),e._v(" 都变成了 JS 逻辑")]),e._v(" "),_("li",[_("code",[e._v("render")]),e._v(" 函数返回 "),_("code",[e._v("vnode")])])]),e._v(" "),_("h3",{attrs:{id:"_2-第二步：响应式开始监听"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二步：响应式开始监听","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. 第二步：响应式开始监听")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Object.defineProperty")])]),e._v(" "),_("li",[e._v("将 "),_("code",[e._v("data")]),e._v(" 的属性代理到 "),_("code",[e._v("vm")]),e._v(" 上")])]),e._v(" "),_("h3",{attrs:{id:"_3-第三步：首次渲染，显示页面，且绑定依赖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三步：首次渲染，显示页面，且绑定依赖","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. 第三步：首次渲染，显示页面，且绑定依赖")]),e._v(" "),_("ul",[_("li",[e._v("初次渲染，执行 "),_("code",[e._v("updateComponent")]),e._v("，执行 "),_("code",[e._v("vm._render()")])]),e._v(" "),_("li",[e._v("执行 "),_("code",[e._v("render")]),e._v(" 函数，会访问到 vm.list vm.title")]),e._v(" "),_("li",[e._v("会被响应式的 "),_("code",[e._v("get")]),e._v(" 方法监听到")]),e._v(" "),_("li",[e._v("执行 "),_("code",[e._v("updateComponent")]),e._v(" ，会走到 "),_("code",[e._v("vdom")]),e._v(" 的 "),_("code",[e._v("patch")]),e._v(" 方法")]),e._v(" "),_("li",[_("code",[e._v("patch")]),e._v(" 将 "),_("code",[e._v("vnode")]),e._v(" 渲染成 "),_("code",[e._v("DOM")]),e._v(" ，初次渲染完成")]),e._v(" "),_("li",[_("code",[e._v("data")]),e._v(" 中有很多属性，有些被模板用到，有些可能不被模板用到")]),e._v(" "),_("li",[e._v("被用到的会走到 "),_("code",[e._v("get")]),e._v(" ，不被用到的不会走到 "),_("code",[e._v("get")])]),e._v(" "),_("li",[e._v("未走到 get 中的属性，"),_("code",[e._v("set")]),e._v(" 的时候我们也无需关心")]),e._v(" "),_("li",[e._v("避免不必要的重复渲染")])]),e._v(" "),_("h3",{attrs:{id:"_4-第四步：data-属性变化，触发-rerender"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-第四步：data-属性变化，触发-rerender","aria-hidden":"true"}},[e._v("#")]),e._v(" 4. 第四步：data 属性变化，触发 rerender")]),e._v(" "),_("ul",[_("li",[e._v("修改属性，被响应式的 "),_("code",[e._v("set")]),e._v(" 监听到")]),e._v(" "),_("li",[_("code",[e._v("set")]),e._v(" 中执行 "),_("code",[e._v("updateComponent")])]),e._v(" "),_("li",[_("code",[e._v("updateComponent")]),e._v(" 重新执行 "),_("code",[e._v("vm._render()")])]),e._v(" "),_("li",[e._v("生成的 "),_("code",[e._v("vnode")]),e._v(" 和 "),_("code",[e._v("prevVnode")]),e._v(" ，通过 "),_("code",[e._v("patch")]),e._v(" 进行对比")]),e._v(" "),_("li",[e._v("渲染到 "),_("code",[e._v("html")]),e._v(" 中")])])])},[],!1,null,null,null);v.default=t.exports}}]);