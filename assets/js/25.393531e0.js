(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{287:function(e,r,a){"use strict";a.r(r);var t=a(38),i=Object(t.a)({},function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("h2",{attrs:{id:"什么是单线程，和异步有什么关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是单线程，和异步有什么关系","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是单线程，和异步有什么关系")]),e._v(" "),a("ul",[a("li",[e._v("单线程 - 只有一个线程，只能做一件事")]),e._v(" "),a("li",[e._v("原因 - 避免 DOM 渲染的冲突")]),e._v(" "),a("li",[e._v("解决方案 - 异步")])]),e._v(" "),a("h2",{attrs:{id:"什么是-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-event-loop","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是 event-loop")]),e._v(" "),a("ul",[a("li",[e._v("event-loop（事件轮询）是js实现异步的具体解决方案")]),e._v(" "),a("li",[e._v("同步代码，直接执行")]),e._v(" "),a("li",[e._v("异步函数先放在异步队列中")]),e._v(" "),a("li",[e._v("待同步函数执行完毕，轮询执行异步队列的函数")])]),e._v(" "),a("h2",{attrs:{id:"是否用过-jquery-的-deferred-延迟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是否用过-jquery-的-deferred-延迟","aria-hidden":"true"}},[e._v("#")]),e._v(" 是否用过 jquery 的 Deferred(延迟)")]),e._v(" "),a("ul",[a("li",[e._v("dtd 的 API 可分成两类，用意不同")]),e._v(" "),a("li",[e._v("第一类： dtd.resolve  dtd.reject")]),e._v(" "),a("li",[e._v("第二类： dtd.then  dtd.done  dtd.fail")]),e._v(" "),a("li",[e._v("这两类应该分开，否则后果很严重！")]),e._v(" "),a("li",[e._v("dtd 返回 deferred 对象")]),e._v(" "),a("li",[e._v("dtd.promise() 返回promise对象")])]),e._v(" "),a("h2",{attrs:{id:"promise-的基本使用和原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-的基本使用和原理","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise 的基本使用和原理")]),e._v(" "),a("ul",[a("li",[e._v("基本语法")]),e._v(" "),a("li",[e._v("如何异常捕获:resolve\\reject")]),e._v(" "),a("li",[e._v("多个串联 - 链式执行的好处:不用写callback,直接return下个promise实例")]),e._v(" "),a("li",[e._v("Promise.all ：待全部完成之后，统一执行success")]),e._v(" "),a("li",[e._v("Promise.race ：只要有一个完成，就执行success")]),e._v(" "),a("li",[e._v("Promise 标准 - 状态变化：pending fulfilled rejected")]),e._v(" "),a("li",[e._v("then 函数：前提是创建Pormise实例，接收必须是Promise实例")])]),e._v(" "),a("h2",{attrs:{id:"介绍一下-async-await（和-promise-的区别、联系）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下-async-await（和-promise-的区别、联系）","aria-hidden":"true"}},[e._v("#")]),e._v(" 介绍一下 async/await（和 Promise 的区别、联系）")]),e._v(" "),a("ul",[a("li",[e._v("基本语法")]),e._v(" "),a("li",[e._v("使用了 Promise ，并没有和 Promise 冲突")]),e._v(" "),a("li",[e._v("完全是同步的写法，再也没有回调函数")]),e._v(" "),a("li",[e._v("但是：改变不了 JS 单线程、异步的本质")])]),e._v(" "),a("h2",{attrs:{id:"总结一下当前-js-解决异步的方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结一下当前-js-解决异步的方案","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结一下当前 JS 解决异步的方案")]),e._v(" "),a("ul",[a("li",[e._v("jQuery Deferred")]),e._v(" "),a("li",[e._v("Promise")]),e._v(" "),a("li",[e._v("Async/Await")]),e._v(" "),a("li",[e._v("Generator")])]),e._v(" "),a("h2",{attrs:{id:"关于-generator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-generator","aria-hidden":"true"}},[e._v("#")]),e._v(" 关于 Generator")]),e._v(" "),a("ul",[a("li",[e._v("原理比较复杂")]),e._v(" "),a("li",[e._v("不是异步的直接替代方式")]),e._v(" "),a("li",[e._v("有更好更简洁的解决方案 async/await")]),e._v(" "),a("li",[e._v("koa 也早已“弃暗投明”")])])])},[],!1,null,null,null);r.default=i.exports}}]);